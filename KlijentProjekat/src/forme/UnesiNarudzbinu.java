/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import domen.Knjiga;
import domen.Korisnik;
import domen.Kupac;
import domen.Narudzbina;
import domen.Pismo;
import domen.StavkaNarudzbine;
import interfejsi.DomenskiObjekat;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import logika.KontrolerKlijent;
import modeli.ModelTabeleStavkiNar;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Iva
 */
public class UnesiNarudzbinu extends javax.swing.JDialog {
    
    private static ResourceBundle bundle_sr_RS;
    String status = "dodaj";
    Narudzbina narudzbina;
    double ukupan = 0;
    Korisnik ulog;
    Kupac kupac;
    SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
    HashMap<String, Enum> pismoLista;
    
    /**
     * Creates new form DodajNarudzbinu
     */
    public UnesiNarudzbinu(java.awt.Frame parent, boolean modal, Narudzbina n, Korisnik ulog, ResourceBundle bundle_sr_RS) {
        super(parent, modal);
        this.bundle_sr_RS = bundle_sr_RS;
        initComponents();
        
        setLocationRelativeTo(null);
        
        pismoLista = new HashMap<>();
        
        postaviSliku();
        
        this.ulog = ulog;
        
        KontrolerKlijent.getInstanca().setuNarudzbinu(this);
        
        lblKorisnik.setText(ulog + "");
        
        popuniKomboPisma();
        
        try {
            popuniKomboKupaca();
            popuniKomboKnjiga();
        } catch (Exception ex) {
            Logger.getLogger(UnesiNarudzbinu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tabelaStavki.setModel(new ModelTabeleStavkiNar(bundle_sr_RS));
        
        if (n != null) {
            status = "izmeni";
            narudzbina = n;
            popuniPolja();
        } else {
            lblDatum.setText(sdf.format(new Date())+"");
            lblUkupan.setText(0 + "");
        }
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    ((NarudzbineForma)parent).osvezi();
                } catch(Exception ex){
                    
                }
                parent.setEnabled(true);
                dispose();
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblDatum = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDodajKupca = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblUkupan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaStavki = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cbPismo = new javax.swing.JComboBox();
        btnDodajKnjigu = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbKnjiga = new javax.swing.JComboBox();
        btnDodajStavku = new javax.swing.JButton();
        filterPismo = new javax.swing.JCheckBox();
        btnObrisi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        lblKorisnik = new javax.swing.JLabel();
        cbKupci = new javax.swing.JComboBox();
        btnSmanjiKolicinu = new javax.swing.JButton();
        lblJezik = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText(bundle_sr_RS.getString("DATUM IZDAVANJA:")); // NOI18N

        lblDatum.setText(bundle_sr_RS.getString("DATUM")); // NOI18N

        jLabel2.setText(bundle_sr_RS.getString("NARUDŽBENICU IZDAO:")); // NOI18N

        jLabel3.setText(bundle_sr_RS.getString("KUPAC:")); // NOI18N

        btnDodajKupca.setText(bundle_sr_RS.getString("UNESI KUPCA")); // NOI18N
        btnDodajKupca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajKupcaActionPerformed(evt);
            }
        });

        jLabel4.setText(bundle_sr_RS.getString("UKUPAN IZNOS:")); // NOI18N

        lblUkupan.setText(bundle_sr_RS.getString("CENA")); // NOI18N

        tabelaStavki.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaStavki);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle_sr_RS.getString("STAVKA NARUDZBENICE")));

        cbPismo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPismoActionPerformed(evt);
            }
        });

        btnDodajKnjigu.setText(bundle_sr_RS.getString("DODAJ NOVU KNJIGU")); // NOI18N
        btnDodajKnjigu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajKnjiguActionPerformed(evt);
            }
        });

        jLabel9.setText(bundle_sr_RS.getString("KNJIGA:")); // NOI18N

        cbKnjiga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodajStavku.setText(bundle_sr_RS.getString("DODAJ STAVKU")); // NOI18N
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        filterPismo.setText(bundle_sr_RS.getString("PISMO")); // NOI18N
        filterPismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterPismoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnDodajStavku))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(filterPismo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPismo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDodajKnjigu)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterPismo)
                    .addComponent(cbPismo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajKnjigu))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btnDodajStavku))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnObrisi.setText(bundle_sr_RS.getString("OBRIŠI STAVKU")); // NOI18N
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnSacuvaj.setText(bundle_sr_RS.getString("SAČUVAJ NARUDŽBENICU")); // NOI18N
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        lblKorisnik.setText(bundle_sr_RS.getString("KORISNIK")); // NOI18N

        cbKupci.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbKupci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKupciActionPerformed(evt);
            }
        });

        btnSmanjiKolicinu.setText(bundle_sr_RS.getString("SMANJI KOLIČINU STAVKE")); // NOI18N
        btnSmanjiKolicinu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSmanjiKolicinuActionPerformed(evt);
            }
        });

        lblJezik.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblJezikMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbKupci, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDodajKupca))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUkupan)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSmanjiKolicinu)
                                .addGap(18, 18, 18)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKorisnik)
                            .addComponent(lblDatum))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(629, Short.MAX_VALUE)
                    .addComponent(lblJezik, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblDatum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblKorisnik))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDodajKupca)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cbKupci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUkupan)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnObrisi)
                    .addComponent(btnSmanjiKolicinu, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblJezik, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(501, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajKupcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajKupcaActionPerformed
        // TODO add your handling code here:
        UnesiKupca uk = new UnesiKupca(this, true, bundle_sr_RS);
        uk.setVisible(true);
    }//GEN-LAST:event_btnDodajKupcaActionPerformed

    private void btnDodajKnjiguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajKnjiguActionPerformed
        // TODO add your handling code here:
        UnesiKnjigu uk = new UnesiKnjigu(this, true, bundle_sr_RS);
        uk.setVisible(true);
    }//GEN-LAST:event_btnDodajKnjiguActionPerformed

    private void filterPismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterPismoActionPerformed
        try {
            // TODO add your handling code here:
            popuniKomboKnjiga();
        } catch (Exception ex) {
            Logger.getLogger(UnesiNarudzbinu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filterPismoActionPerformed

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed
        // TODO add your handling code here:
        Knjiga k = (Knjiga) cbKnjiga.getSelectedItem();
        ModelTabeleStavkiNar mt = (ModelTabeleStavkiNar) tabelaStavki.getModel();
        StavkaNarudzbine sn = new StavkaNarudzbine(narudzbina, -1, k.getCena(), k, 1, k.getCena(), "kom");
        ukupan += sn.getUkupanIznosStavkeNarudzbine();
        lblUkupan.setText(ukupan + "");
        mt.dodaj(sn);
    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        // TODO add your handling code here:
        int red = tabelaStavki.getSelectedRow();
        if (red != -1) {
            ModelTabeleStavkiNar mt = (ModelTabeleStavkiNar) tabelaStavki.getModel();
            StavkaNarudzbine sn = mt.vratiStavku(red);
            mt.obrisiStavku(red);
            
            ukupan -= sn.getUkupanIznosStavkeNarudzbine();
            lblUkupan.setText(ukupan + "");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        // TODO add your handling code here:

        Date datum = new Date();
        
        ModelTabeleStavkiNar mt = (ModelTabeleStavkiNar) tabelaStavki.getModel();
        ArrayList<StavkaNarudzbine> lista = mt.getLista();
        ArrayList<StavkaNarudzbine> zaBrisanje = mt.getZaBrisanje();
        
        for (StavkaNarudzbine stavkaNarudzbine : zaBrisanje) {
            lista.add(stavkaNarudzbine);
        }
        
//        if (kupac == null) {
//            JOptionPane.showMessageDialog(this, "Unesi kupca");
//            return;
//        }
        
        if (status.equals("dodaj")) {
            narudzbina = new Narudzbina(-1, datum, ukupan, ulog, kupac, lista, "");
            KontrolerKlijent.getInstanca().posaljiZahtevZaKreiranjeNarudzbine(narudzbina);
            
        } else {
            int idNar = (int) narudzbina.getNarudzbinaID();
            narudzbina = new Narudzbina(idNar, datum, ukupan, ulog, kupac, lista, "obradjena");
            KontrolerKlijent.getInstanca().posaljiZahtevZaObraduNarudzbine(narudzbina);
        }
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void cbPismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPismoActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            popuniKomboKnjiga();
        } catch (Exception ex) {
            Logger.getLogger(UnesiNarudzbinu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbPismoActionPerformed

    private void cbKupciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKupciActionPerformed
        // TODO add your handling code here:
        kupac = (Kupac) cbKupci.getSelectedItem();
    }//GEN-LAST:event_cbKupciActionPerformed

    private void btnSmanjiKolicinuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSmanjiKolicinuActionPerformed
        // TODO add your handling code here:
        int red = tabelaStavki.getSelectedRow();
        if (red != -1) {
            ModelTabeleStavkiNar mt = (ModelTabeleStavkiNar) tabelaStavki.getModel();
            StavkaNarudzbine sn = mt.vratiStavku(red);
            mt.smanjiKolicinuStavke(red);

            ukupan -= sn.getKnjiga().getCena();
            lblUkupan.setText(ukupan + "");
        }
    }//GEN-LAST:event_btnSmanjiKolicinuActionPerformed

    private void lblJezikMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblJezikMouseClicked
        // TODO add your handling code here:
        if (bundle_sr_RS == ResourceBundle.getBundle("forme/Bundle_en")) {
            bundle_sr_RS = ResourceBundle.getBundle("forme/Bundle_sr_RS");
        } else {
            bundle_sr_RS = ResourceBundle.getBundle("forme/Bundle_en");
        }
        
        postaviSliku();
        
        postaviJezikPolja();
    }//GEN-LAST:event_lblJezikMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajKnjigu;
    private javax.swing.JButton btnDodajKupca;
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnSmanjiKolicinu;
    private javax.swing.JComboBox cbKnjiga;
    private javax.swing.JComboBox cbKupci;
    private javax.swing.JComboBox cbPismo;
    private javax.swing.JCheckBox filterPismo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblJezik;
    private javax.swing.JLabel lblKorisnik;
    private javax.swing.JLabel lblUkupan;
    private javax.swing.JTable tabelaStavki;
    // End of variables declaration//GEN-END:variables

    private void popuniPolja() {
        if (narudzbina != null) {
            lblDatum.setText(sdf.format(narudzbina.getDatumIzdavanja()) + "");

            lblUkupan.setText(narudzbina.getUkupanIznos() + "");

            ArrayList<StavkaNarudzbine> stavke = narudzbina.getStavke();

            ModelTabeleStavkiNar mt = (ModelTabeleStavkiNar) tabelaStavki.getModel();
            for (StavkaNarudzbine sn : stavke) {
                mt.postavi(sn);
                ukupan += sn.getUkupanIznosStavkeNarudzbine();
            }
        } else {
            ukupan = 0;
            lblUkupan.setText(ukupan + "");
        }

    }

    private void popuniKomboKnjiga() {
        KontrolerKlijent.getInstanca().posaljiZahtevZaVracanjeKnjiga();
    }
    
    private void popuniKomboKupaca() {
        KontrolerKlijent.getInstanca().posaljiZahtevZaVracanjeKupaca();
    }

    public void osvezi2() throws Exception {
        popuniKomboKnjiga();
    }

    public void obradiNarudzbinu(ServerskiOdgovor so) {
        try {
            if (so.getIzuzetak() != null) {
                throw so.getIzuzetak();
            }

            Narudzbina n = (Narudzbina) so.getOdgovor();
            if (n != null) {
                ((ObavestenjeNarudzbina) new ObavestenjeNarudzbina(null, true, n, status.equals("izmeni"), bundle_sr_RS)).setVisible(true);
                        
                this.getParent().setEnabled(true);
                ((NarudzbineForma) this.getParent()).osvezi();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("NARUDZBINA NIJE OBRADJENA"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("GRESKA PRI OBRADI NARUDZBENICE") + "\n" + e.getMessage());
        }

    }

    public void unesiNarudzbinu(ServerskiOdgovor so) {
        try {
            if (so.getIzuzetak() != null) {
                throw so.getIzuzetak();
            }
            
            Narudzbina n = (Narudzbina) so.getOdgovor();
            if (n.getId() != -1) {
                ((ObavestenjeNarudzbina) new ObavestenjeNarudzbina(null, true, n, status.equals("izmeni"), bundle_sr_RS)).setVisible(true);
                
                this.getParent().setEnabled(true);
                ((NarudzbineForma) this.getParent()).osvezi();
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("NARUDZBINA NIJE UNETA"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("GRESKA PRI CUVANJU NARUDZBENICE")+ "\n" + e.getMessage());
        }
    }

    public void postaviKnjige(ServerskiOdgovor so) {
        try {
            if (so.getIzuzetak() != null) {
                throw so.getIzuzetak();
            }

            cbKnjiga.removeAllItems();
            ArrayList<DomenskiObjekat> knjige = (ArrayList<DomenskiObjekat>) so.getOdgovor();

            if (filterPismo.isSelected()) {
//                Pismo pismo = (Pismo) cbPismo.getSelectedItem();
                String pis = (String) cbPismo.getSelectedItem();
                Pismo pismo = (Pismo) pismoLista.get(pis);

                for (DomenskiObjekat knjiga : knjige) {
                    if (((Knjiga) knjiga).getPismo() == pismo) {
                        cbKnjiga.addItem(knjiga);
                    }
                }
            } else {
                for (DomenskiObjekat knjiga : knjige) {
                    cbKnjiga.addItem(knjiga);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("DOSLO JE DO GRESKE")+ "\n" + e.getMessage());
        }
    }

    public void postaviKupce(ServerskiOdgovor so) {
        try {
            if (so.getIzuzetak() != null) {
                throw so.getIzuzetak();
            }

            cbKupci.removeAllItems();
            ArrayList<Kupac> kupci = (ArrayList<Kupac>) so.getOdgovor();

            for (DomenskiObjekat k : kupci) {
                cbKupci.addItem(k);
            }

            if (status.equals("izmeni")) {
                kupac = narudzbina.getKupac();
            }
            
            cbKupci.setSelectedItem(kupac);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, bundle_sr_RS.getString("DOSLO JE DO GRESKE") + "\n" + e.getMessage());
        }
    }

    public void postaviKupca(Kupac nov) {
        this.kupac = nov;
        if (narudzbina != null) {
            narudzbina.setKupac(kupac);
        }
        popuniKomboKupaca();
    }

    private void postaviSliku() {
        String jezik;
        
        if (bundle_sr_RS == ResourceBundle.getBundle("forme/Bundle_en")) {
            jezik = "/slike/srb.png";
        } else {
            jezik = "/slike/eng.png";
        }
        
        ImageIcon ikona = new javax.swing.ImageIcon(getClass().getResource(jezik));
        Image img = ikona.getImage() ;  
        Image newimg = img.getScaledInstance(lblJezik.getWidth(), lblJezik.getHeight(), Image.SCALE_SMOOTH);
        ikona = new ImageIcon( newimg );
        lblJezik.setIcon(ikona);
    }

    private void popuniKomboPisma() {
        cbPismo.removeAllItems();
        
        for (Enum pismo : Pismo.values()) {
            pismoLista.put(bundle_sr_RS.getString(pismo + ""), pismo);
            cbPismo.addItem(bundle_sr_RS.getString(pismo + ""));
        }
    }

    private void postaviJezikPolja() {
        btnSmanjiKolicinu.setText(bundle_sr_RS.getString("SMANJI KOLIČINU STAVKE"));
        btnSacuvaj.setText(bundle_sr_RS.getString("SAČUVAJ NARUDŽBENICU"));
        btnObrisi.setText(bundle_sr_RS.getString("OBRIŠI STAVKU"));
        filterPismo.setText(bundle_sr_RS.getString("PISMO"));
        btnDodajStavku.setText(bundle_sr_RS.getString("DODAJ STAVKU"));
        jLabel9.setText(bundle_sr_RS.getString("KNJIGA:"));
        btnDodajKnjigu.setText(bundle_sr_RS.getString("DODAJ NOVU KNJIGU")); // NOI18N
        jLabel4.setText(bundle_sr_RS.getString("UKUPAN IZNOS:")); // NOI18N
        jLabel1.setText(bundle_sr_RS.getString("DATUM IZDAVANJA:")); // NOI18N
        jLabel2.setText(bundle_sr_RS.getString("NARUDŽBENICU IZDAO:")); // NOI18N
        jLabel3.setText(bundle_sr_RS.getString("KUPAC:")); // NOI18N
        btnDodajKupca.setText(bundle_sr_RS.getString("UNESI KUPCA"));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle_sr_RS.getString("STAVKA NARUDZBENICE")));
        
        ModelTabeleStavkiNar mts = (ModelTabeleStavkiNar) tabelaStavki.getModel();
        mts.setBundle_sr_RS(bundle_sr_RS);
        
//        ukupan = 0;
//        lblUkupan.setText(ukupan + "");
//        popuniPolja();
        
        popuniKomboPisma();
    }

    
}
